#Использовать asserts
#Использовать json
#Использовать "../src/"



Перем Логин Экспорт, Пароль Экспорт, АдресСистемы Экспорт, КукиДоступа Экспорт;
Перем СоотРеализованыхЗапросов;



Перем юТест;

Функция ПолучитьСписокТестов(Знач Тестирование) Экспорт
	
	юТест = Тестирование;
	
	ИменаТестов = Новый Массив;
	
	ИменаТестов.Добавить("ТестДолжен_ПроверитьИнициализациюКлассаПроблема");
	
	ИменаТестов.Добавить("ТестДолжен_ПроверитьУстановкуДанныхВПроблемуСтруктурой");
	ИменаТестов.Добавить("ТестДолжен_ПроверитьУстановкуДанныхВПроблемуПакетомJSON");
	
	ИменаТестов.Добавить("ТестДолжен_ПроверитьИзменитьПроблему");
	ИменаТестов.Добавить("ТестДолжен_ПроверитьУдалитьПроблему");
	
	Возврат ИменаТестов;
	
КонецФункции

Процедура ТестДолжен_ПроверитьИнициализациюКлассаПроблема() Экспорт
	
	Проблема = Новый Проблема();
	Ожидаем.Что(ТипЗнч(Проблема) = Тип("Проблема")).Равно(Истина);
	Ожидаем.Что(Проблема.key).ИмеетТип("Строка").Не_().Заполнено();
	Ожидаем.Что(Проблема.id).ИмеетТип("Строка").Не_().Заполнено();
	
КонецПроцедуры

Процедура ТестДолжен_ПроверитьУстановкуДанныхВПроблемуСтруктурой() Экспорт
	
	
	Проблема = Новый Проблема();
	
	ЭталонСоотПоля = Новый Структура();
	ЭталонСоотПоля.Вставить("summary", "Привет");
	ЭталонСоотПоля.Вставить("description", "Привет мир");
	
	ЭталоннаяСтруктура = Новый Структура();
	ЭталоннаяСтруктура.Вставить("id", "test_id");
	ЭталоннаяСтруктура.Вставить("self", "test_self");
	ЭталоннаяСтруктура.Вставить("key", "TEST-1");
	ЭталоннаяСтруктура.Вставить("fields", ЭталонСоотПоля);
	

	Ожидаем.Что(Проблема.id).ИмеетТип("Строка").НЕ_().Заполнено();
	Ожидаем.Что(Проблема.key).ИмеетТип("Строка").НЕ_().Заполнено();

	Проблема.УстановитьДанные(ЭталоннаяСтруктура);
	
	Ожидаем.Что(Проблема.id).ИмеетТип("Строка").Равно("test_id");
	Ожидаем.Что(Проблема.key).ИмеетТип("Строка").Равно("TEST-1");
	
	Ожидаем.Что(Проблема.fields.summary).ИмеетТип("Строка").Равно("Привет");
	
КонецПроцедуры

Процедура ТестДолжен_ПроверитьУстановкуДанныхВПроблемуПакетомJSON() Экспорт
	Проблема = Новый Проблема();
	
	ЭталонныйПакетJSON = "
		|{
		|""id"": ""17148"",
		|""self"": ""https://dev.jira.ru/rest/api/2/issue/17148"",
		|""key"": ""TEST-2"",
		|""fields"": {        
		|    ""description"": ""тест описания "",
		|    ""summary"": ""Тест редактирование 4""
		|	}
		|}";
	
	
	
	Проблема.УстановитьДанные(ЭталонныйПакетJSON);
	
	Ожидаем.Что(Проблема.id).ИмеетТип("Строка").Равно("17148");
	Ожидаем.Что(Проблема.key).ИмеетТип("Строка").Равно("TEST-2");
	
	Ожидаем.Что(Проблема.fields.summary).ИмеетТип("Строка").Равно("Тест редактирование 4");
	
	
КонецПроцедуры

Процедура ТестДолжен_ПроверитьИзменитьПроблему() Экспорт
	
	КлассJira = Новый Jira();
	
	КлючПроблемы = "TEST-2";
	Проблема = КлассJira.ПолучитьПроблему(КлючПроблемы);
	Ожидаем.Что(Проблема.fields.summary).ИмеетТип("Строка").Равно("Тест редактирование 4");
	
	Стркfields = Новый Структура("summary", "Тест изменения");
	ПроблемаОбновленная = Проблема.Изменить(Стркfields);
	Ожидаем.Что(ПроблемаОбновленная).ИмеетТип("Проблема");
	Ожидаем.Что(ПроблемаОбновленная.key).ИмеетТип("Строка").Равно("TEST-2");
	Ожидаем.Что(ПроблемаОбновленная.fields.summary).ИмеетТип("Строка").Равно("Тест изменения");	
	
	Стркfields = Новый Структура("summary", "Тест редактирование 4");
	ПроблемаОбновленная = Проблема.Изменить(Стркfields);
	Ожидаем.Что(ПроблемаОбновленная).ИмеетТип("Проблема");
	Ожидаем.Что(ПроблемаОбновленная.key).ИмеетТип("Строка").Равно("TEST-2");
	Ожидаем.Что(ПроблемаОбновленная.fields.summary).ИмеетТип("Строка").Равно("Тест редактирование 4");	
	
КонецПроцедуры


Процедура ТестДолжен_ПроверитьУдалитьПроблему() Экспорт

	
	Jira = Новый Jira();
	
	ЭталонныйПакетJSON = "
		|{
		|""id"": """",    
		|""key"": """",
		|""fields"": {        
		|    ""description"": ""тест создания задачи "",
		|    ""summary"": ""тест создания задачи 1"",
		|    ""project"": {""id"": ""11200""},
		| 	 ""issuetype"": {""id"": ""10100""},
		|    ""summary"": ""тест создания задачи 1""
		|			}
		|}";
		
	СозданнаяПроблема = Jira.СоздатьПроблему(ЭталонныйПакетJSON);
	
	Ожидаем.Что(СозданнаяПроблема).ИмеетТип("Проблема").Заполнено();
	Ожидаем.Что(СозданнаяПроблема.id).ИмеетТип("Строка").Заполнено();
	Ожидаем.Что(СтрНачинаетсяС(СозданнаяПроблема.key,"TEST")).ИмеетТип("Булево").Равно(Истина);

	КлючСозданнойПроблемы = СозданнаяПроблема.key;

	СозданнаяПроблема.Удалить();
	
	НайденнаяПроблема = Jira.ПолучитьПроблему(КлючСозданнойПроблемы);
	Ожидаем.Что(НайденнаяПроблема).ИмеетТип("Проблема");
	Ожидаем.Что(НайденнаяПроблема.key).Не_().Заполнено();


КонецПроцедуры


ТестДолжен_ПроверитьУстановкуДанныхВПроблемуСтруктурой();

